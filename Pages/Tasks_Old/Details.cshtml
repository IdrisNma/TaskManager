@page
@model TaskManager.Pages.Tasks.DetailsModel
@{
    ViewData["Title"] = "Task Details";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title mb-0">Task Details</h3>
                        <span class="badge @(Model.TaskItem.Status switch 
                        {
                            TaskManager.Models.TaskStatus.Pending => "bg-secondary",
                            TaskManager.Models.TaskStatus.InProgress => "bg-primary",
                            TaskManager.Models.TaskStatus.Completed => "bg-success",
                            TaskManager.Models.TaskStatus.Cancelled => "bg-danger",
                            _ => "bg-secondary"
                        }) fs-6">
                            @Model.TaskItem.Status.ToString().Replace("InProgress", "In Progress")
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-sm-3">
                            <strong>Title:</strong>
                        </div>
                        <div class="col-sm-9">
                            @Model.TaskItem.Title
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.TaskItem.Description))
                    {
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <strong>Description:</strong>
                            </div>
                            <div class="col-sm-9">
                                @Model.TaskItem.Description
                            </div>
                        </div>
                    }
                    
                    <div class="row mb-3">
                        <div class="col-sm-3">
                            <strong>Due Date:</strong>
                        </div>
                        <div class="col-sm-9">
                            @Model.TaskItem.DueDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                            @if (Model.TaskItem.DueDate < DateTime.Now && Model.TaskItem.Status != TaskManager.Models.TaskStatus.Completed)
                            {
                                <span class="badge bg-warning text-dark ms-2">Overdue</span>
                            }
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-sm-3">
                            <strong>Priority:</strong>
                        </div>
                        <div class="col-sm-9">
                            <span class="badge @(Model.TaskItem.Priority switch 
                            {
                                TaskManager.Models.TaskPriority.Low => "bg-success",
                                TaskManager.Models.TaskPriority.Medium => "bg-warning text-dark",
                                TaskManager.Models.TaskPriority.High => "bg-danger",
                                TaskManager.Models.TaskPriority.Critical => "bg-dark",
                                _ => "bg-secondary"
                            })">
                                @Model.TaskItem.Priority
                            </span>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-sm-3">
                            <strong>Assigned To:</strong>
                        </div>
                        <div class="col-sm-9">
                            @Model.TaskItem.AssignedToUser?.Email
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-sm-3">
                            <strong>Created By:</strong>
                        </div>
                        <div class="col-sm-9">
                            @(Model.TaskItem.CreatedByUser?.Email ?? "Unknown")
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-sm-3">
                            <strong>Created At:</strong>
                        </div>
                        <div class="col-sm-9">
                            @Model.TaskItem.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                        </div>
                    </div>
                    
                    @if (Model.TaskItem.CompletedAt.HasValue)
                    {
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <strong>Completed At:</strong>
                            </div>
                            <div class="col-sm-9">
                                @Model.TaskItem.CompletedAt.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                            </div>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model.TaskItem.Notes))
                    {
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <strong>Notes:</strong>
                            </div>
                            <div class="col-sm-9">
                                @Model.TaskItem.Notes
                            </div>
                        </div>
                    }
                    
                    <hr>
                    
                    <div class="d-flex justify-content-between">
                        <a asp-page="./Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                        <div>
                            <a asp-page="./Edit" asp-route-id="@Model.TaskItem.Id" class="btn btn-primary">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            @if (Model.TaskItem.Status != TaskManager.Models.TaskStatus.Completed)
                            {
                                <form method="post" asp-page-handler="CompleteTask" asp-route-id="@Model.TaskItem.Id" class="d-inline">
                                    <button type="submit" class="btn btn-success" onclick="return confirm('Mark this task as completed?')">
                                        <i class="fas fa-check"></i> Mark Complete
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
}